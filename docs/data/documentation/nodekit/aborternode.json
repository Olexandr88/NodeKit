{"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nodekit\/aborternode"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/AsyncNode","doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","doc:\/\/NodeKit\/documentation\/NodeKit\/Node"],"title":"Conforms To","kind":"relationships"}],"identifier":{"url":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Node that allows aborting a chain of operations."},{"text":" ","type":"text"},{"type":"text","text":"For example, a RequestSenderNode class can act as an aborter for network requests."}],"hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/init(next:aborter:)"]},{"identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/aborter","doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/next"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/process(_:logContext:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/AsyncNode-Implementations","doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/CombineCompatibleNode-Implementations","doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/Node-Implementations"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"AborterNode","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"text":"Output","kind":"genericParameter"},{"kind":"text","text":">"}]}],"kind":"declarations"}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"AborterNode","kind":"identifier"}],"title":"AborterNode","roleHeading":"Class","symbolKind":"class","role":"symbol","modules":[{"name":"NodeKit"}],"externalID":"s:7NodeKit07AborterA0C","navigatorTitle":[{"text":"AborterNode","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/AborterNode/init(next:aborter:)":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializer."}],"kind":"symbol","url":"\/documentation\/nodekit\/aborternode\/init(next:aborter:)","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/init(next:aborter:)","title":"init(next:aborter:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"next","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P","text":"AsyncNode"},{"kind":"text","text":"<"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">, "},{"text":"aborter","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Aborter","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit7AborterP"},{"text":")","kind":"text"}]},"doc://NodeKit/documentation/NodeKit/Node":{"abstract":[{"text":"Protocol describing any node or chain of nodes.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Necessary for combining all types of nodes and adding common methods."}],"title":"Node","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/Node","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"Node","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/nodekit\/node","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Node"}]},"doc://NodeKit/documentation/NodeKit/AborterNode/Node-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/Node-Implementations","role":"collectionGroup","title":"Node Implementations","abstract":[],"url":"\/documentation\/nodekit\/aborternode\/node-implementations"},"doc://NodeKit/documentation/NodeKit/AborterNode":{"type":"topic","kind":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode","role":"symbol","navigatorTitle":[{"text":"AborterNode","kind":"identifier"}],"title":"AborterNode","abstract":[{"text":"Node that allows aborting a chain of operations.","type":"text"},{"text":" ","type":"text"},{"text":"For example, a RequestSenderNode class can act as an aborter for network requests.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AborterNode","kind":"identifier"}],"url":"\/documentation\/nodekit\/aborternode"},"doc://NodeKit/documentation/NodeKit/AborterNode/process(_:logContext:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/process(_:logContext:)","role":"symbol","title":"process(_:logContext:)","abstract":[{"text":"If the task is already canceled at the time of calling process, it returns CancellationError.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If process was called and a task cancellation event is received, it sends "},{"code":"cancel()","type":"codeVoice"},{"text":" to the Aborter.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"process"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"externalParam","text":"logContext"},{"kind":"text","text":": any "},{"text":"LoggingContextProtocol","preciseIdentifier":"s:7NodeKit22LoggingContextProtocolP","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/nodekit\/aborternode\/process(_:logcontext:)"},"doc://NodeKit/documentation/NodeKit/AborterNode/next":{"role":"symbol","abstract":[{"type":"text","text":"The next node for processing."}],"title":"next","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/next","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"next","kind":"identifier"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P","kind":"typeIdentifier","text":"AsyncNode"},{"kind":"text","text":"<"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/nodekit\/aborternode\/next"},"doc://NodeKit/documentation/NodeKit/AborterNode/aborter":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/nodekit\/aborternode\/aborter","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/aborter","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"aborter"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"Aborter","preciseIdentifier":"s:7NodeKit7AborterP"}],"abstract":[{"type":"text","text":"Entity canceling transformation."}],"title":"aborter"},"doc://NodeKit/documentation/NodeKit/CombineCompatibleNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineCompatibleNode"}],"navigatorTitle":[{"kind":"identifier","text":"CombineCompatibleNode"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","url":"\/documentation\/nodekit\/combinecompatiblenode","abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Combine."}],"title":"CombineCompatibleNode"},"doc://NodeKit/documentation/NodeKit/AborterNode/AsyncNode-Implementations":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/AsyncNode-Implementations","type":"topic","title":"AsyncNode Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/nodekit\/aborternode\/asyncnode-implementations","kind":"article"},"doc://NodeKit/documentation/NodeKit/AsyncNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncNode","kind":"identifier"}],"url":"\/documentation\/nodekit\/asyncnode","kind":"symbol","role":"symbol","type":"topic","title":"AsyncNode","navigatorTitle":[{"kind":"identifier","text":"AsyncNode"}],"abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Swift Concurrency."},{"text":" ","type":"text"},{"type":"text","text":"Supports result processing with Combine by inheriting the "},{"isActive":true,"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","type":"reference"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"type":"text","text":"Contains parameters for logging, inheriting the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/Node"},{"type":"text","text":" protocol."},{"text":" ","type":"text"},{"text":"Applicable for nodes that return a single result.","type":"text"}],"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AsyncNode"},"doc://NodeKit/documentation/NodeKit/AborterNode/CombineCompatibleNode-Implementations":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/AborterNode\/CombineCompatibleNode-Implementations","type":"topic","title":"CombineCompatibleNode Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/nodekit\/aborternode\/combinecompatiblenode-implementations","kind":"article"}}}