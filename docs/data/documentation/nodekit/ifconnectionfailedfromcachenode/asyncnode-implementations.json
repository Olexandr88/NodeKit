{"kind":"article","hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit","doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode"]]},"identifier":{"url":"doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/AsyncNode-Implementations","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/eraseToAnyNode()","doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/nodeResultPublisher(for:on:logContext:)","doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/process(_:)"]}],"metadata":{"modules":[{"name":"NodeKit"}],"roleHeading":"API Collection","role":"collectionGroup","title":"AsyncNode Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/asyncnode-implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://NodeKit/documentation/NodeKit/IfConnectionFailedFromCacheNode/nodeResultPublisher(for:on:logContext:)":{"abstract":[{"text":"Method for obtaining a Publisher to subscribe to the result.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Base implementation of "},{"isActive":true,"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","type":"reference"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Calls the "},{"code":"process","type":"codeVoice"},{"text":" method with a new task upon each subscription.","type":"text"},{"type":"text","text":" "},{"text":"Calls ","type":"text"},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" on the task when "},{"code":"cancel","type":"codeVoice"},{"text":" is invoked in ","type":"text"},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" object."}],"title":"nodeResultPublisher(for:on:logContext:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nodeResultPublisher"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"kind":"text","text":": some "},{"text":"Scheduler","preciseIdentifier":"s:7Combine9SchedulerP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"logContext","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7NodeKit22LoggingContextProtocolP","kind":"typeIdentifier","text":"LoggingContextProtocol"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"kind":"text","text":">, "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"url":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/noderesultpublisher(for:on:logcontext:)","role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/nodeResultPublisher(for:on:logContext:)"},"doc://NodeKit/documentation/NodeKit/IfConnectionFailedFromCacheNode/eraseToAnyNode()":{"type":"topic","url":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/erasetoanynode()","abstract":[{"text":"Method returning the wrapper structure of the current node.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Necessary to avoid problems arising from the use of  any AsyncNode."}],"role":"symbol","title":"eraseToAnyNode()","kind":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/eraseToAnyNode()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyNode"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit08AnyAsyncA0V","text":"AnyAsyncNode"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","text":"Input"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}]},"doc://NodeKit/documentation/NodeKit/IfConnectionFailedFromCacheNode/process(_:)":{"type":"topic","url":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/process(_:)","abstract":[{"type":"text","text":"Method  "},{"type":"codeVoice","code":"process"},{"type":"text","text":"  with the creation of a new log context."}],"role":"symbol","title":"process(_:)","kind":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode\/process(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"process"},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","text":"Input"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","text":"Output","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://NodeKit/documentation/NodeKit/CombineCompatibleNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineCompatibleNode"}],"navigatorTitle":[{"kind":"identifier","text":"CombineCompatibleNode"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","url":"\/documentation\/nodekit\/combinecompatiblenode","abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Combine."}],"title":"CombineCompatibleNode"},"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/IfConnectionFailedFromCacheNode":{"type":"topic","url":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode","abstract":[{"type":"text","text":"Node implements the caching policy “If there is no internet, request data from cache”"},{"type":"text","text":" "},{"text":"This node works with the URL cache.","type":"text"}],"role":"symbol","title":"IfConnectionFailedFromCacheNode","kind":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/IfConnectionFailedFromCacheNode","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfConnectionFailedFromCacheNode"}],"navigatorTitle":[{"text":"IfConnectionFailedFromCacheNode","kind":"identifier"}]}}}