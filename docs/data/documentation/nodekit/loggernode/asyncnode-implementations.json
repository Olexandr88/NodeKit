{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/nodekit\/loggernode\/asyncnode-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit","doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/AsyncNode-Implementations"},"sections":[],"kind":"article","metadata":{"roleHeading":"API Collection","modules":[{"name":"NodeKit"}],"title":"AsyncNode Implementations","role":"collectionGroup"},"topicSections":[{"identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/eraseToAnyNode()","doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/nodeResultPublisher(for:on:logContext:)","doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/process()","doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/process(_:)"],"generated":true,"title":"Instance Methods"}],"references":{"doc://NodeKit/documentation/NodeKit/LoggerNode":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode","url":"\/documentation\/nodekit\/loggernode","title":"LoggerNode","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"This node performs logging to the console."},{"text":" ","type":"text"},{"type":"text","text":"Immediately passes control to the next node and subscribes to perform operations."}],"navigatorTitle":[{"kind":"identifier","text":"LoggerNode"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LoggerNode","kind":"identifier"}],"role":"symbol"},"doc://NodeKit/documentation/NodeKit/LoggerNode/eraseToAnyNode()":{"role":"symbol","title":"eraseToAnyNode()","abstract":[{"text":"Method returning the wrapper structure of the current node.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Necessary to avoid problems arising from the use of  any AsyncNode."}],"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/eraseToAnyNode()","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyNode","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"AnyAsyncNode","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit08AnyAsyncA0V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","text":"Input","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/nodekit\/loggernode\/erasetoanynode()"},"doc://NodeKit/documentation/NodeKit/LoggerNode/process()":{"conformance":{"constraints":[{"code":"I","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"process()","abstract":[{"text":"Calls ","type":"text"},{"code":"process(Void())","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/process()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"process"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/nodekit\/loggernode\/process()"},"doc://NodeKit/documentation/NodeKit/LoggerNode/process(_:)":{"abstract":[{"type":"text","text":"Method  "},{"code":"process","type":"codeVoice"},{"type":"text","text":"  with the creation of a new log context."}],"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/process(_:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"process","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","text":"Input"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"url":"\/documentation\/nodekit\/loggernode\/process(_:)","title":"process(_:)"},"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/LoggerNode/nodeResultPublisher(for:on:logContext:)":{"kind":"symbol","abstract":[{"text":"Method for obtaining a Publisher to subscribe to the result.","type":"text"},{"text":" ","type":"text"},{"text":"Base implementation of ","type":"text"},{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","isActive":true,"type":"reference"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Calls the ","type":"text"},{"type":"codeVoice","code":"process"},{"type":"text","text":" method with a new task upon each subscription."},{"text":" ","type":"text"},{"text":"Calls ","type":"text"},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" on the task when "},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" is invoked in "},{"type":"codeVoice","code":"AnyCancellable"},{"text":" object.","type":"text"}],"type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/LoggerNode\/nodeResultPublisher(for:on:logContext:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nodeResultPublisher"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","kind":"typeIdentifier","text":"Input"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"logContext"},{"text":": any ","kind":"text"},{"text":"LoggingContextProtocol","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit22LoggingContextProtocolP"},{"text":") -> ","kind":"text"},{"text":"AnyPublisher","kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s5NeverO","text":"Never","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"nodeResultPublisher(for:on:logContext:)","role":"symbol","url":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(for:on:logcontext:)"},"doc://NodeKit/documentation/NodeKit/CombineCompatibleNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineCompatibleNode"}],"navigatorTitle":[{"kind":"identifier","text":"CombineCompatibleNode"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","url":"\/documentation\/nodekit\/combinecompatiblenode","abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Combine."}],"title":"CombineCompatibleNode"}}}