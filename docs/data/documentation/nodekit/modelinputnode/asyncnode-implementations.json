{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"AsyncNode Implementations","modules":[{"name":"NodeKit"}],"role":"collectionGroup","roleHeading":"API Collection"},"kind":"article","sections":[],"identifier":{"url":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/AsyncNode-Implementations","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/eraseToAnyNode()","doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/nodeResultPublisher(for:on:logContext:)","doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/process()","doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/process(_:)"],"title":"Instance Methods","generated":true}],"hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit","doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode"]]},"variants":[{"paths":["\/documentation\/nodekit\/modelinputnode\/asyncnode-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://NodeKit/documentation/NodeKit/ModelInputNode":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModelInputNode"}],"title":"ModelInputNode","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ModelInputNode"}],"role":"symbol","url":"\/documentation\/nodekit\/modelinputnode","type":"topic","abstract":[{"text":"Node for initializing data processing.","type":"text"},{"type":"text","text":" "},{"text":"Used for working with models represented by two layers of DTOs.","type":"text"}]},"doc://NodeKit/documentation/NodeKit/ModelInputNode/process()":{"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"I"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/process()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"process","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","text":"Output"},{"kind":"text","text":">"}],"title":"process()","kind":"symbol","role":"symbol","url":"\/documentation\/nodekit\/modelinputnode\/process()","type":"topic","abstract":[{"text":"Calls ","type":"text"},{"code":"process(Void())","type":"codeVoice"},{"type":"text","text":"."}]},"doc://NodeKit/documentation/NodeKit/CombineCompatibleNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineCompatibleNode"}],"navigatorTitle":[{"kind":"identifier","text":"CombineCompatibleNode"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","url":"\/documentation\/nodekit\/combinecompatiblenode","abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Combine."}],"title":"CombineCompatibleNode"},"doc://NodeKit/documentation/NodeKit/ModelInputNode/eraseToAnyNode()":{"role":"symbol","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/eraseToAnyNode()","url":"\/documentation\/nodekit\/modelinputnode\/erasetoanynode()","kind":"symbol","abstract":[{"text":"Method returning the wrapper structure of the current node.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Necessary to avoid problems arising from the use of  any AsyncNode."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyNode"},{"kind":"text","text":"() -> "},{"text":"AnyAsyncNode","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit08AnyAsyncA0V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","text":"Output"},{"kind":"text","text":">"}],"type":"topic","title":"eraseToAnyNode()"},"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/ModelInputNode/process(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"process","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/process(_:)","abstract":[{"text":"Method  ","type":"text"},{"code":"process","type":"codeVoice"},{"type":"text","text":"  with the creation of a new log context."}],"url":"\/documentation\/nodekit\/modelinputnode\/process(_:)","title":"process(_:)","kind":"symbol"},"doc://NodeKit/documentation/NodeKit/ModelInputNode/nodeResultPublisher(for:on:logContext:)":{"url":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(for:on:logcontext:)","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/ModelInputNode\/nodeResultPublisher(for:on:logContext:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nodeResultPublisher","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa"},{"kind":"text","text":", "},{"text":"on","kind":"externalParam"},{"kind":"text","text":": some "},{"preciseIdentifier":"s:7Combine9SchedulerP","text":"Scheduler","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"logContext","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"LoggingContextProtocol","preciseIdentifier":"s:7NodeKit22LoggingContextProtocolP"},{"kind":"text","text":") -> "},{"text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta","text":"NodeResult"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"title":"nodeResultPublisher(for:on:logContext:)","role":"symbol","abstract":[{"text":"Method for obtaining a Publisher to subscribe to the result.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Base implementation of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Calls the ","type":"text"},{"code":"process","type":"codeVoice"},{"text":" method with a new task upon each subscription.","type":"text"},{"type":"text","text":" "},{"text":"Calls ","type":"text"},{"code":"cancel","type":"codeVoice"},{"type":"text","text":" on the task when "},{"code":"cancel","type":"codeVoice"},{"text":" is invoked in ","type":"text"},{"code":"AnyCancellable","type":"codeVoice"},{"type":"text","text":" object."}]}}}