{"kind":"symbol","variants":[{"paths":["\/documentation\/nodekit\/swift\/result\/asyncflatmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/NodeKit\/documentation\/NodeKit\/Swift\/Result\/asyncFlatMap(_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","symbolKind":"method","modules":[{"name":"NodeKit","relatedModules":["Swift"]}],"roleHeading":"Instance Method","title":"asyncFlatMap(_:)","externalID":"s:s6ResultO7NodeKitE12asyncFlatMapyAByqd__s5Error_pGAFxYaXEYalF","extendedModule":"Swift","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"asyncFlatMap"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"genericParameter"},{"kind":"text","text":">(("},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta","text":"NodeResult"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"text":">) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:7NodeKit0A6Resulta","kind":"typeIdentifier","text":"NodeResult"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit","doc:\/\/NodeKit\/documentation\/NodeKit\/Swift","doc:\/\/NodeKit\/documentation\/NodeKit\/Swift\/Result"]]},"abstract":[{"type":"text","text":"Method for asynchronous transformation of positive result"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncFlatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewSuccess"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"kind":"text","text":": ("},{"text":"Success","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NodeKit0A6Resulta","text":"NodeResult","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/NodeResult","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"kind":"text","text":">) "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta","text":"NodeResult"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewSuccess"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Asynchronous function to transform the positive result","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The result of applying the transformation."}]}],"kind":"content"}],"references":{"doc://NodeKit/documentation/NodeKit/Swift":{"abstract":[],"title":"Swift","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/Swift","role":"collection","type":"topic","kind":"symbol","url":"\/documentation\/nodekit\/swift"},"doc://NodeKit/documentation/NodeKit/Swift/Result":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/Swift\/Result","navigatorTitle":[{"text":"Result","kind":"identifier"}],"url":"\/documentation\/nodekit\/swift\/result","title":"Result","role":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6ResultO","kind":"identifier","text":"Result"}],"abstract":[],"type":"topic","kind":"symbol"},"doc://NodeKit/documentation/NodeKit/NodeResult":{"type":"topic","navigatorTitle":[{"text":"NodeResult","kind":"identifier"}],"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/NodeResult","title":"NodeResult","abstract":[{"text":"Result of the nodeâ€™s data processing method.","type":"text"}],"url":"\/documentation\/nodekit\/noderesult","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"NodeResult","kind":"identifier"}]},"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/Swift/Result/asyncFlatMap(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/Swift\/Result\/asyncFlatMap(_:)","role":"symbol","title":"asyncFlatMap(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"asyncFlatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewSuccess"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Success"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"NodeResult","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/nodekit\/swift\/result\/asyncflatmap(_:)","abstract":[{"type":"text","text":"Method for asynchronous transformation of positive result"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}