{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/AsyncNode-Implementations","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nodekit\/voidinputnode\/asyncnode-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","topicSections":[{"identifiers":["doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/eraseToAnyNode()","doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/nodeResultPublisher(for:on:logContext:)","doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/process()","doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/process(_:)"],"title":"Instance Methods","generated":true}],"metadata":{"role":"collectionGroup","modules":[{"name":"NodeKit"}],"title":"AsyncNode Implementations","roleHeading":"API Collection"},"hierarchy":{"paths":[["doc:\/\/NodeKit\/documentation\/NodeKit","doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode"]]},"references":{"doc://NodeKit/documentation/NodeKit/VoidInputNode/eraseToAnyNode()":{"type":"topic","abstract":[{"text":"Method returning the wrapper structure of the current node.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Necessary to avoid problems arising from the use of  any AsyncNode."}],"kind":"symbol","title":"eraseToAnyNode()","url":"\/documentation\/nodekit\/voidinputnode\/erasetoanynode()","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/eraseToAnyNode()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyNode","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NodeKit08AnyAsyncA0V","text":"AnyAsyncNode","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"text":">","kind":"text"}]},"doc://NodeKit/documentation/NodeKit/VoidInputNode/nodeResultPublisher(for:on:logContext:)":{"abstract":[{"text":"Method for obtaining a Publisher to subscribe to the result.","type":"text"},{"type":"text","text":" "},{"text":"Base implementation of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Calls the ","type":"text"},{"type":"codeVoice","code":"process"},{"text":" method with a new task upon each subscription.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Calls "},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" on the task when "},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" is invoked in "},{"type":"codeVoice","code":"AnyCancellable"},{"type":"text","text":" object."}],"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/nodeResultPublisher(for:on:logContext:)","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nodeResultPublisher"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"on"},{"kind":"text","text":": some "},{"kind":"typeIdentifier","text":"Scheduler","preciseIdentifier":"s:7Combine9SchedulerP"},{"text":", ","kind":"text"},{"text":"logContext","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"LoggingContextProtocol","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit22LoggingContextProtocolP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NodeKit0A6Resulta","text":"NodeResult","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"kind":"text","text":">, "},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"url":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(for:on:logcontext:)","title":"nodeResultPublisher(for:on:logContext:)"},"doc://NodeKit/documentation/NodeKit/VoidInputNode/process(_:)":{"abstract":[{"text":"Method  ","type":"text"},{"code":"process","type":"codeVoice"},{"type":"text","text":"  with the creation of a new log context."}],"title":"process(_:)","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/process(_:)","url":"\/documentation\/nodekit\/voidinputnode\/process(_:)","kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"process"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"Input","preciseIdentifier":"s:7NodeKit05AsyncA0P5InputQa","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa","kind":"typeIdentifier"},{"kind":"text","text":">"}]},"doc://NodeKit/documentation/NodeKit/VoidInputNode":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"VoidInputNode","kind":"identifier"}],"abstract":[{"text":"Node that allows passing ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" as input.","type":"text"}],"url":"\/documentation\/nodekit\/voidinputnode","title":"VoidInputNode","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"VoidInputNode"}]},"doc://NodeKit/documentation/NodeKit":{"role":"collection","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit","kind":"symbol","title":"NodeKit","url":"\/documentation\/nodekit","abstract":[]},"doc://NodeKit/documentation/NodeKit/VoidInputNode/process()":{"identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/VoidInputNode\/process()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"process","kind":"identifier"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"NodeResult","kind":"typeIdentifier","preciseIdentifier":"s:7NodeKit0A6Resulta"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7NodeKit05AsyncA0P6OutputQa"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"I"},{"text":" is ","type":"text"},{"code":"()","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"text":"Calls ","type":"text"},{"code":"process(Void())","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/nodekit\/voidinputnode\/process()","title":"process()","kind":"symbol","role":"symbol"},"doc://NodeKit/documentation/NodeKit/CombineCompatibleNode":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombineCompatibleNode"}],"navigatorTitle":[{"kind":"identifier","text":"CombineCompatibleNode"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/NodeKit\/documentation\/NodeKit\/CombineCompatibleNode","url":"\/documentation\/nodekit\/combinecompatiblenode","abstract":[{"type":"text","text":"Protocol for a node describing the approach of transforming input data into a result using Combine."}],"title":"CombineCompatibleNode"}}}