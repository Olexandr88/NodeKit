{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/init(next:aborter:)","title":"init(next: any AsyncNode<Input, Output>, aborter: any Aborter)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/aborter","title":"var aborter: any Aborter","type":"property"},{"path":"\/documentation\/nodekit\/aborternode\/next","title":"var next: any AsyncNode<Input, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/aborternode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/aborternode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/aborternode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborternode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/aborternode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/aborternode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/aborternode","title":"AborterNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/init(next:updatetokenchain:)","title":"init(next: some AsyncNode<TransportURLRequest, Output>, updateTokenChain: some AsyncNode<(), ()>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/next","title":"var next: any AsyncNode<TransportURLRequest, Output>","type":"property"},{"path":"\/documentation\/nodekit\/accesssafenode\/updatetokenchain","title":"var updateTokenChain: any AsyncNode<Void, Void>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/process(_:logcontext:)","title":"func process(TransportURLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/accesssafenode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/accesssafenode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/accesssafenode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/accesssafenode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/accesssafenode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/accesssafenode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/accesssafenode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/accesssafenode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/accesssafenode","title":"AccessSafeNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/init(dataprovider:pagesize:)","title":"init(dataProvider: any AsyncPagerDataProvider<Value>, pageSize: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/hasnext()","title":"func hasNext() -> Bool","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/next()","title":"func next() async -> Result<Value, any Error>","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/renew()","title":"func renew()","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/restorestate()","title":"func restoreState()","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/savestate()","title":"func saveState()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/nodekit\/asyncpageriterator\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/nodekit\/asyncpageriterator\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/asyncpageriterator","title":"AsyncPagerIterator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/init(rawencodable:)","title":"init(rawEncodable: some AsyncNode<Input.DTO, Output>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/rawencodable","title":"var rawEncodable: any AsyncNode<Input.DTO, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/dtoencodernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtoencodernode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/dtoencodernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/dtoencodernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/dtoencodernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/dtoencodernode","title":"DTOEncoderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/init(next:)","title":"init(next: any AsyncNode<Input.Raw, Output.Raw>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/next","title":"var next: any AsyncNode<Input.Raw, Output.Raw>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/dtomappernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dtomappernode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/dtomappernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtomappernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/dtomappernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/dtomappernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/dtomappernode","title":"DTOMapperNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/init(next:)","title":"init(next: (any AsyncNode<URLDataResponse, Void>)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/next","title":"var next: (any AsyncNode<URLDataResponse, Void>)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/process(_:logcontext:)","title":"func process(URLDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Data>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/dataloadingresponseprocessor\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/dataloadingresponseprocessor","title":"DataLoadingResponseProcessor","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/next","title":"var next: any AsyncNode<Input.Raw, Output.DTO.Raw>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/entryinputdtooutputnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/entryinputdtooutputnode","title":"EntryInputDtoOutputNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/init(next:headers:)","title":"init(next: some AsyncNode<TransportURLRequest, Dictionary<String, Any>>, headers: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/headerinjectornode\/next","title":"var next: any TransportLayerNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/process(_:logcontext:)","title":"func process(TransportURLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/headerinjectornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/headerinjectornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/headerinjectornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/headerinjectornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/headerinjectornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/headerinjectornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/headerinjectornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/headerinjectornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/headerinjectornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/headerinjectornode","title":"HeaderInjectorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/init(next:cachereadernode:)","title":"init(next: any AsyncNode<URLRequest, Json>, cacheReaderNode: any AsyncNode<URLNetworkRequest, Json>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/cachereadernode","title":"var cacheReaderNode: any AsyncNode<URLNetworkRequest, Json>","type":"property"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/next","title":"var next: any AsyncNode<URLRequest, Json>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/process(_:logcontext:)","title":"func process(URLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/ifconnectionfailedfromcachenode","title":"IfConnectionFailedFromCacheNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/init(next:filters:)","title":"init(next: any AsyncNode<Input, Output>, filters: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/filters","title":"var filters: [String]","type":"property"},{"path":"\/documentation\/nodekit\/loggernode\/next","title":"var next: any AsyncNode<Input, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/loggernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/loggernode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/loggernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/loggernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/loggernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/loggernode","title":"LoggerNode","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggingcontext\/log","title":"var log: (any Logable)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggingcontext\/add(_:)","title":"func add((any Logable)?)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggingcontext\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/nodekit\/loggingcontext\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/nodekit\/loggingcontext\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/nodekit\/loggingcontext\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/loggingcontext","title":"LoggingContext","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/init(next:metadata:)","title":"init(next: some AsyncNode<RequestModel<Raw>, Output>, metadata: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/next","title":"var next: any AsyncNode<RequestModel<Raw>, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/process(_:logcontext:)","title":"func process(Raw, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/metadataconnectornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/metadataconnectornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/metadataconnectornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/metadataconnectornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/metadataconnectornode","title":"MetadataConnectorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/init(next:)","title":"init(next: any AsyncNode<Input.DTO, Output.DTO>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/next","title":"var next: any AsyncNode<Input.DTO, Output.DTO>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/modelinputnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/modelinputnode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/modelinputnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/modelinputnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/modelinputnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/modelinputnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/modelinputnode","title":"ModelInputNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/init(payloadmodel:)","title":"convenience init(payloadModel: T)","type":"init"},{"path":"\/documentation\/nodekit\/multipartmodel\/init(payloadmodel:files:)","title":"init(payloadModel: T, files: [String : MultipartFileProvider])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/files","title":"let files: [String : MultipartFileProvider]","type":"property"},{"path":"\/documentation\/nodekit\/multipartmodel\/payloadmodel","title":"let payloadModel: T","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/from(dto:)","title":"static func from(dto: MultipartModel<T.DTO>) throws -> Self","type":"method"}],"path":"\/documentation\/nodekit\/multipartmodel\/dtodecodable-implementations","title":"DTODecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/todto()","title":"func toDTO() throws -> MultipartModel<T.DTO>","type":"method"}],"path":"\/documentation\/nodekit\/multipartmodel\/dtoencodable-implementations","title":"DTOEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/from(raw:)","title":"static func from(raw: MultipartModel<T.Raw>) throws -> Self","type":"method"}],"path":"\/documentation\/nodekit\/multipartmodel\/rawdecodable-implementations","title":"RawDecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/toraw()","title":"func toRaw() throws -> MultipartModel<T.Raw>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartmodel\/raw","title":"MultipartModel.Raw","type":"typealias"}],"path":"\/documentation\/nodekit\/multipartmodel\/rawencodable-implementations","title":"RawEncodable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/multipartmodel","title":"MultipartModel","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/init(next:multipartformdatafactory:)","title":"init(next: any AsyncNode<URLRequest, Output>, multipartFormDataFactory: any MultipartFormDataFactory)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/next","title":"var next: any AsyncNode<URLRequest, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/append(multipartform:with:)","title":"func append(multipartForm: any MultipartFormDataProtocol, with: MultipartURLRequest)","type":"method"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/process(_:logcontext:)","title":"func process(MultipartURLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/multipartrequestcreatornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/multipartrequestcreatornode","title":"MultipartRequestCreatorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/init(next:method:)","title":"init(next: any AsyncNode<MultipartURLRequest, Type>, method: Method)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/method","title":"var method: Method","type":"property"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/next","title":"var next: any AsyncNode<MultipartURLRequest, Type>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/process(_:logcontext:)","title":"func process(RoutableRequestModel<any URLRouteProvider, MultipartModel<[String : Data]>>, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/multiparturlrequesttrasformatornode","title":"MultipartURLRequestTrasformatorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/init(next:)","title":"init(next: some AsyncNode<Input.Raw, Output>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/next","title":"var next: any AsyncNode<Input.Raw, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/rawencodernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/rawencodernode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/rawencodernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/rawencodernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/rawencodernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/rawencodernode","title":"RawEncoderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/init(next:providers:)","title":"init(next: some AsyncNode<URLRequest, Output>, providers: [any MetadataProvider])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/next","title":"var next: any AsyncNode<URLRequest, Output>","type":"property"},{"path":"\/documentation\/nodekit\/requestcreatornode\/providers","title":"var providers: [any MetadataProvider]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/process(_:logcontext:)","title":"func process(TransportURLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/requestcreatornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestcreatornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/requestcreatornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestcreatornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestcreatornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/requestcreatornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestcreatornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/requestcreatornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/requestcreatornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/requestcreatornode","title":"RequestCreatorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/init(next:encoding:)","title":"init(next: some AsyncNode<EncodableRequestModel<Route, Raw, Encoding>, Output>, encoding: Encoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/encoding","title":"var encoding: Encoding","type":"property"},{"path":"\/documentation\/nodekit\/requestencodernode\/next","title":"var next: any RequestEncoderNode<Raw, Route, Encoding, Output>.NextNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/process(_:logcontext:)","title":"func process(RoutableRequestModel<Route, Raw>, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/nextnode","title":"RequestEncoderNode.NextNode","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/requestencodernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestencodernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/requestencodernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestencodernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestencodernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/requestencodernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/requestencodernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/requestencodernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/requestencodernode","title":"RequestEncoderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/init(next:route:)","title":"init(next: any RequestRouterNode<Raw, Route, Output>.NextNode, route: Route)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/next","title":"var next: any RequestRouterNode<Raw, Route, Output>.NextNode","type":"property"},{"path":"\/documentation\/nodekit\/requestrouternode\/route","title":"var route: Route","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/process(_:logcontext:)","title":"func process(RequestModel<Raw>, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/nextnode","title":"RequestRouterNode.NextNode","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/requestrouternode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestrouternode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/requestrouternode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestrouternode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestrouternode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/requestrouternode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestrouternode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/requestrouternode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/requestrouternode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/requestrouternode","title":"RequestRouterNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/init(rawresponseprocessor:datataskactor:manager:)","title":"init(rawResponseProcessor: some AsyncNode<NodeDataResponse, Type>, dataTaskActor: (any URLSessionDataTaskActorProtocol)?, manager: URLSession?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/rawresponseprocessor-swift.property","title":"var rawResponseProcessor: any RequestSenderNode<Type>.RawResponseProcessor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/cancel(logcontext:)","title":"func cancel(logContext: any LoggingContextProtocol)","type":"method"},{"path":"\/documentation\/nodekit\/requestsendernode\/process(_:logcontext:)","title":"func process(URLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/rawresponseprocessor-swift.typealias","title":"RequestSenderNode.RawResponseProcessor","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/requestsendernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestsendernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/requestsendernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestsendernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/requestsendernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/requestsendernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestsendernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/requestsendernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/requestsendernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/requestsendernode","title":"RequestSenderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/init(next:)","title":"init(next: (any ResponsePostprocessorLayerNode)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/next","title":"var next: (any ResponsePostprocessorLayerNode)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/json(from:)","title":"func json(from: URLDataResponse) throws -> (Json, String)","type":"method"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/process(_:logcontext:)","title":"func process(URLDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/responsedataparsernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/responsedataparsernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/responsedataparsernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/responsedataparsernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responsedataparsernode","title":"ResponseDataParserNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/init(next:)","title":"init(next: some AsyncNode<URLDataResponse, Dictionary<String, Any>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/next","title":"var next: any ResponseProcessingLayerNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/process(_:logcontext:)","title":"func process(URLDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/responsedatapreprocessornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responsedatapreprocessornode","title":"ResponseDataPreprocessorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/init(next:)","title":"init(next: some AsyncNode<URLDataResponse, Type>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/next","title":"var next: any AsyncNode<URLDataResponse, Type>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/process(_:logcontext:)","title":"func process(URLDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/httperror","title":"ResponseHttpErrorProcessorNode.HttpError","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornode","title":"ResponseHttpErrorProcessorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/init(next:)","title":"init(next: some AsyncNode<URLDataResponse, Type>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/next","title":"let next: any AsyncNode<URLDataResponse, Type>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/process(_:logcontext:)","title":"func process(NodeDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/responseprocessornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responseprocessornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/responseprocessornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responseprocessornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/responseprocessornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/responseprocessornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/responseprocessornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/responseprocessornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responseprocessornode","title":"ResponseProcessorNode","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/serverrequestsmanager\/manager","title":"let manager: URLSession","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/serverrequestsmanager\/shared","title":"static let shared: ServerRequestsManager","type":"property"}],"path":"\/documentation\/nodekit\/serverrequestsmanager","title":"ServerRequestsManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/init(next:)","title":"init(next: any AsyncNode<URLRequest, Json>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/next","title":"var next: any AsyncNode<URLRequest, Json>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/process(_:logcontext:)","title":"func process(URLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/technicaerrormappernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/technicaerrormappernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/technicaerrormappernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/technicaerrormappernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/technicaerrormappernode","title":"TechnicaErrorMapperNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/init(tokenrefreshchain:)","title":"init(tokenRefreshChain: any AsyncNode<Void, Void>)","type":"init"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/init(tokenrefresheractor:)","title":"init(tokenRefresherActor: any TokenRefresherActorProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/process(_:logcontext:)","title":"func process(Void, logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/tokenrefreshernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/tokenrefreshernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/tokenrefreshernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/tokenrefreshernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/tokenrefreshernode","title":"TokenRefresherNode","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/process(_:logcontext:)","title":"func process(URLNetworkRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urlcachereadernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urlcachereadernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urlcachereadernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urlcachereadernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlcachereadernode","title":"URLCacheReaderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/process(_:logcontext:)","title":"func process(URLProcessedResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urlcachewriternode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urlcachewriternode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urlcachewriternode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urlcachewriternode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlcachewriternode","title":"URLCacheWriterNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/init(servicechainprovider:config:logfilter:)","title":"init(serviceChainProvider: any ServiceChainProvider, config: URLQueryConfigModel, logFilter: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/config","title":"var config: URLQueryConfigModel","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/encoding","title":"var encoding: ParametersEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/headersproviders","title":"var headersProviders: [any MetadataProvider]","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/logfilter","title":"let logFilter: [String]","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/method","title":"var method: Method","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/route","title":"var route: Route?","type":"property"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/servicechainprovider","title":"let serviceChainProvider: any ServiceChainProvider","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/add(provider:)","title":"func add(provider: any MetadataProvider) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/build()-48qf9","title":"func build<I>() -> AnyAsyncNode<I, Void>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/build()-4q4yd","title":"func build() -> AnyAsyncNode<Void, Void>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/build()-5r4dy","title":"func build<O>() -> AnyAsyncNode<Void, O>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/build()-6nvql","title":"func build<I, O>() -> AnyAsyncNode<I, O>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/build()-9dwl0","title":"func build<I, O>() -> AnyAsyncNode<I, O>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/builddataloading()-3c99j","title":"func buildDataLoading() -> AnyAsyncNode<Void, Data>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/builddataloading()-6uznv","title":"func buildDataLoading<I>() -> AnyAsyncNode<I, Data>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/encode(as:)","title":"func encode(as: ParametersEncoding) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/metadataconnectorchain(root:)-1mz2j","title":"func metadataConnectorChain<O>(root: any AsyncNode<TransportURLRequest, O>) -> some AsyncNode<Dictionary<String, Any>, O>\n","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/metadataconnectorchain(root:)-40n3","title":"func metadataConnectorChain(root: any AsyncNode<MultipartURLRequest, Json>) -> any AsyncNode<MultipartModel<[String : Data]>, Json>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/requestrouternode(root:)","title":"func requestRouterNode<Raw, Output>(root: some AsyncNode) -> RequestRouterNode<Raw, any URLRouteProvider, Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/route(_:_:)","title":"func route(Method, Route) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/set(arrayencodingstrategy:)","title":"func set(arrayEncodingStrategy: any URLQueryArrayKeyEncodingStartegy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/set(boolencodingstartegy:)","title":"func set(boolEncodingStartegy: any URLQueryBoolEncodingStartegy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/set(dictencodindstrategy:)","title":"func set(dictEncodindStrategy: any URLQueryDictionaryKeyEncodingStrategy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/set(metadata:)","title":"func set(metadata: [String : String]) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/urlchainbuilder\/set(query:)","title":"func set(query: [String : Any]) -> Self","type":"method"}],"path":"\/documentation\/nodekit\/urlchainbuilder","title":"URLChainBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/init(next:etagheaderkey:)","title":"init(next: some AsyncNode<TransportURLRequest, Dictionary<String, Any>>, etagHeaderKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/etagheaderkey","title":"var etagHeaderKey: String","type":"property"},{"path":"\/documentation\/nodekit\/urletagreadernode\/next","title":"var next: any TransportLayerNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/process(_:logcontext:)","title":"func process(TransportURLRequest, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urletagreadernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagreadernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urletagreadernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagreadernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagreadernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urletagreadernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagreadernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urletagreadernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urletagreadernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urletagreadernode","title":"URLETagReaderNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/init(next:etagheaderkey:)","title":"init(next: (any ResponsePostprocessorLayerNode)?, eTagHeaderKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/etagheaderkey","title":"var eTagHeaderKey: String","type":"property"},{"path":"\/documentation\/nodekit\/urletagsavernode\/next","title":"var next: (any ResponsePostprocessorLayerNode)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/process(_:logcontext:)","title":"func process(URLProcessedResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urletagsavernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagsavernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urletagsavernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagsavernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urletagsavernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urletagsavernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urletagsavernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urletagsavernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urletagsavernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urletagsavernode","title":"URLETagSaverNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/init(next:)","title":"init(next: some AsyncNode<TransportURLRequest, Type>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/next","title":"var next: any AsyncNode<TransportURLRequest, Type>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/process(_:logcontext:)","title":"func process(RequestEncodingModel, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urljsonrequestencodingnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urljsonrequestencodingnode","title":"URLJsonRequestEncodingNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/init(next:cachereader:)","title":"init(next: some AsyncNode<URLDataResponse, Dictionary<String, Any>>, cacheReader: some AsyncNode<URLNetworkRequest, Dictionary<String, Any>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/cachereader","title":"var cacheReader: any AsyncNode<URLNetworkRequest, Json>","type":"property"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/next","title":"var next: any ResponseProcessingLayerNode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/process(_:logcontext:)","title":"func process(URLDataResponse, logContext: any LoggingContextProtocol) async -> NodeResult<Json>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlnotmodifiedtriggernode","title":"URLNotModifiedTriggerNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/init(next:config:)","title":"init(next: any AsyncNode<RoutableRequestModel<any URLRouteProvider, Raw>, Output>, config: URLQueryConfigModel)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/config","title":"var config: URLQueryConfigModel","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/next","title":"var next: any AsyncNode<RoutableRequestModel<any URLRouteProvider, Raw>, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/makequerycomponents(from:by:)","title":"func makeQueryComponents(from: Any, by: String) -> [URLQueryItem]","type":"method"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/process(_:logcontext:)","title":"func process(RoutableRequestModel<any URLRouteProvider, Raw>, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/nodeerror","title":"URLQueryInjectorNode.NodeError","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urlqueryinjectornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urlqueryinjectornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryinjectornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urlqueryinjectornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlqueryinjectornode","title":"URLQueryInjectorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/init(next:method:)","title":"init(next: some AsyncNode<RequestEncodingModel, Type>, method: Method)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/method","title":"var method: Method","type":"property"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/next","title":"var next: any AsyncNode<RequestEncodingModel, Type>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/process(_:logcontext:)","title":"func process(EncodableRequestModel<any URLRouteProvider, Json, ParametersEncoding?>, logContext: any LoggingContextProtocol) async -> NodeResult<Type>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/urlrequesttrasformatornode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlrequesttrasformatornode","title":"URLRequestTrasformatorNode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/init(session:)","title":"init(session: URLSession?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/session","title":"let session: URLSession?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/providerequestdatachain(with:)","title":"func provideRequestDataChain(with: [any MetadataProvider]) -> any AsyncNode<TransportURLRequest, Data>","type":"method"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/providerequestjsonchain(with:)","title":"func provideRequestJsonChain(with: [any MetadataProvider]) -> any AsyncNode<TransportURLRequest, Json>","type":"method"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/providerequestmultipartchain()","title":"func provideRequestMultipartChain() -> any AsyncNode<MultipartURLRequest, Json>","type":"method"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/provideresponsedatachain()","title":"func provideResponseDataChain() -> any AsyncNode<NodeDataResponse, Data>","type":"method"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/provideresponsejsonchain()","title":"func provideResponseJsonChain() -> any AsyncNode<NodeDataResponse, Json>","type":"method"},{"path":"\/documentation\/nodekit\/urlservicechainprovider\/provideresponsemultipartchain()","title":"func provideResponseMultipartChain() -> any AsyncNode<NodeDataResponse, Json>","type":"method"}],"path":"\/documentation\/nodekit\/urlservicechainprovider","title":"URLServiceChainProvider","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/canceltask()","title":"func cancelTask()","type":"method"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/store(task:)","title":"func store(task: any CancellableTask)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/nodekit\/urlsessiondatataskactor\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlsessiondatataskactor","title":"URLSessionDataTaskActor","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidionode\/process(_:logcontext:)","title":"func process(Void, logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidionode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/voidionode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidionode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/voidionode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidionode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/voidionode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/voidionode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/voidionode","title":"VoidIONode","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/init(next:)","title":"init(next: any AsyncNode<Json, Output>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/next","title":"var next: any AsyncNode<Json, Output>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/process(_:logcontext:)","title":"func process(Void, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/voidinputnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidinputnode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/voidinputnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidinputnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/voidinputnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/voidinputnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/voidinputnode","title":"VoidInputNode","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidoutputnode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidoutputnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/voidoutputnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/voidoutputnode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/voidoutputnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/voidoutputnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/voidoutputnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/voidoutputnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/voidoutputnode","title":"VoidOutputNode","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/aborter\/cancel(logcontext:)","title":"func cancel(logContext: any LoggingContextProtocol)","type":"method"}],"path":"\/documentation\/nodekit\/aborter","title":"Aborter","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asynciterator\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asynciterator\/hasnext()","title":"func hasNext() -> Bool","type":"method"},{"path":"\/documentation\/nodekit\/asynciterator\/next()","title":"func next() async -> Result<Self.Value, any Error>","type":"method"},{"path":"\/documentation\/nodekit\/asynciterator\/renew()","title":"func renew()","type":"method"}],"path":"\/documentation\/nodekit\/asynciterator","title":"AsyncIterator","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncnode\/input","title":"Input","type":"associatedtype"},{"path":"\/documentation\/nodekit\/asyncnode\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nodekit\/asyncnode\/erasetoanynode()-9q4vf","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"}],"title":"AsyncNode Implementations","type":"groupMarker"}],"path":"\/documentation\/nodekit\/asyncnode\/erasetoanynode()-7rdro","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/asyncnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/asyncnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/asyncnode\/process(_:logcontext:)","title":"func process(Self.Input, logContext: any LoggingContextProtocol) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/asyncnode","title":"AsyncNode","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpagerdataprovider\/value","title":"Value","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpagerdataprovider\/provide(for:with:)","title":"func provide(for: Int, with: Int) async -> NodeResult<AsyncPagerData<Self.Value>>","type":"method"}],"path":"\/documentation\/nodekit\/asyncpagerdataprovider","title":"AsyncPagerDataProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/cancellabletask\/cancel()","title":"func cancel()","type":"method"}],"path":"\/documentation\/nodekit\/cancellabletask","title":"CancellableTask","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/chainbuilder\/route","title":"Route","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/chainbuilder\/add(provider:)","title":"func add(provider: any MetadataProvider) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/build()-36597","title":"func build<I, O>() -> AnyAsyncNode<I, O>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/build()-5c7qf","title":"func build<I>() -> AnyAsyncNode<I, Void>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/build()-78200","title":"func build() -> AnyAsyncNode<Void, Void>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/build()-9ggos","title":"func build<O>() -> AnyAsyncNode<Void, O>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/build()-9rmnl","title":"func build<I, O>() -> AnyAsyncNode<I, O>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/builddataloading()-36w4o","title":"func buildDataLoading() -> AnyAsyncNode<Void, Data>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/builddataloading()-88wft","title":"func buildDataLoading<I>() -> AnyAsyncNode<I, Data>","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/encode(as:)","title":"func encode(as: ParametersEncoding) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/route(_:_:)","title":"func route(Method, Self.Route) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainbuilder\/set(metadata:)","title":"func set(metadata: [String : String]) -> Self","type":"method"}],"path":"\/documentation\/nodekit\/chainbuilder","title":"ChainBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/chainconfigbuilder\/set(arrayencodingstrategy:)","title":"func set(arrayEncodingStrategy: any URLQueryArrayKeyEncodingStartegy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainconfigbuilder\/set(boolencodingstartegy:)","title":"func set(boolEncodingStartegy: any URLQueryBoolEncodingStartegy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainconfigbuilder\/set(dictencodindstrategy:)","title":"func set(dictEncodindStrategy: any URLQueryDictionaryKeyEncodingStrategy) -> Self","type":"method"},{"path":"\/documentation\/nodekit\/chainconfigbuilder\/set(query:)","title":"func set(query: [String : Any]) -> Self","type":"method"}],"path":"\/documentation\/nodekit\/chainconfigbuilder","title":"ChainConfigBuilder","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/i","title":"I","type":"associatedtype"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/o","title":"O","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(for:on:logcontext:)-9k894","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"}],"title":"CombineCompatibleNode Implementations","type":"groupMarker"}],"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(for:on:logcontext:)-34z2f","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/combinecompatiblenode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/combinecompatiblenode","title":"CombineCompatibleNode","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtodecodable\/dto","title":"DTO","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtodecodable\/from(dto:)","title":"static func from(dto: Self.DTO) throws -> Self","type":"method"}],"path":"\/documentation\/nodekit\/dtodecodable","title":"DTODecodable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodable\/dto","title":"DTO","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoencodable\/todto()","title":"func toDTO() throws -> Self.DTO","type":"method"}],"path":"\/documentation\/nodekit\/dtoencodable","title":"DTOEncodable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/logable\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nodekit\/logable\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/nodekit\/logable\/next","title":"var next: (any Logable)?","type":"property"},{"path":"\/documentation\/nodekit\/logable\/order","title":"var order: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/logable\/add(message:)","title":"func add(message: String)","type":"method"}],"path":"\/documentation\/nodekit\/logable","title":"Logable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggingcontextprotocol\/log","title":"var log: (any Logable)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/loggingcontextprotocol\/add(_:)","title":"func add((any Logable)?)","type":"method"}],"path":"\/documentation\/nodekit\/loggingcontextprotocol","title":"LoggingContextProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/metadataprovider\/metadata()","title":"func metadata() -> [String : String]","type":"method"}],"path":"\/documentation\/nodekit\/metadataprovider","title":"MetadataProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartformdatafactory\/produce()","title":"func produce() -> any MultipartFormDataProtocol","type":"method"}],"path":"\/documentation\/nodekit\/multipartformdatafactory","title":"MultipartFormDataFactory","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/node\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/node\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/node","title":"Node","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/parameterencoding\/encode(urlparameters:parameters:)","title":"func encode(urlParameters: TransportURLParameters, parameters: Json?) throws -> TransportURLRequest","type":"method"}],"path":"\/documentation\/nodekit\/parameterencoding","title":"ParameterEncoding","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawdecodable\/raw","title":"Raw","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nodekit\/rawdecodable\/from(raw:)-972w2","title":"static func from(raw: Self.Raw) throws -> Self","type":"method"}],"title":"RawDecodable Implementations","type":"groupMarker"}],"path":"\/documentation\/nodekit\/rawdecodable\/from(raw:)-8fypw","title":"static func from(raw: Self.Raw) throws -> Self","type":"method"}],"path":"\/documentation\/nodekit\/rawdecodable","title":"RawDecodable","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawencodable\/raw","title":"Raw","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/nodekit\/rawencodable\/toraw()-30gim","title":"func toRaw() throws -> Self.Raw","type":"method"}],"title":"RawEncodable Implementations","type":"groupMarker"}],"path":"\/documentation\/nodekit\/rawencodable\/toraw()-153t9","title":"func toRaw() throws -> Self.Raw","type":"method"}],"path":"\/documentation\/nodekit\/rawencodable","title":"RawEncodable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/servicechainprovider\/providerequestdatachain(with:)","title":"func provideRequestDataChain(with: [any MetadataProvider]) -> any AsyncNode<TransportURLRequest, Data>","type":"method"},{"path":"\/documentation\/nodekit\/servicechainprovider\/providerequestjsonchain(with:)","title":"func provideRequestJsonChain(with: [any MetadataProvider]) -> any AsyncNode<TransportURLRequest, Json>","type":"method"},{"path":"\/documentation\/nodekit\/servicechainprovider\/providerequestmultipartchain()","title":"func provideRequestMultipartChain() -> any AsyncNode<MultipartURLRequest, Json>","type":"method"}],"path":"\/documentation\/nodekit\/servicechainprovider","title":"ServiceChainProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/statestorable\/clearstates()","title":"func clearStates()","type":"method"},{"path":"\/documentation\/nodekit\/statestorable\/restorestate()","title":"func restoreState()","type":"method"},{"path":"\/documentation\/nodekit\/statestorable\/savestate()","title":"func saveState()","type":"method"}],"path":"\/documentation\/nodekit\/statestorable","title":"StateStorable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/tokenrefresheractorprotocol\/refresh(logcontext:)","title":"func refresh(logContext: any LoggingContextProtocol) async -> NodeResult<Void>","type":"method"}],"path":"\/documentation\/nodekit\/tokenrefresheractorprotocol","title":"TokenRefresherActorProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingstartegy\/encode(value:)","title":"func encode(value: String) -> String","type":"method"}],"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingstartegy","title":"URLQueryArrayKeyEncodingStartegy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryboolencodingstartegy\/encode(value:)","title":"func encode(value: Bool) -> String","type":"method"}],"path":"\/documentation\/nodekit\/urlqueryboolencodingstartegy","title":"URLQueryBoolEncodingStartegy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlquerydictionarykeyencodingstrategy\/encode(queryitemname:dictionarykey:)","title":"func encode(queryItemName: String, dictionaryKey: String) -> String","type":"method"}],"path":"\/documentation\/nodekit\/urlquerydictionarykeyencodingstrategy","title":"URLQueryDictionaryKeyEncodingStrategy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrouteprovider\/url()","title":"func url() throws -> URL","type":"method"}],"path":"\/documentation\/nodekit\/urlrouteprovider","title":"URLRouteProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactorprotocol\/canceltask()","title":"func cancelTask()","type":"method"},{"path":"\/documentation\/nodekit\/urlsessiondatataskactorprotocol\/store(task:)","title":"func store(task: any CancellableTask)","type":"method"}],"path":"\/documentation\/nodekit\/urlsessiondatataskactorprotocol","title":"URLSessionDataTaskActorProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/alamofiremultipartformdatafactory\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/alamofiremultipartformdatafactory\/produce()","title":"func produce() -> any MultipartFormDataProtocol","type":"method"}],"path":"\/documentation\/nodekit\/alamofiremultipartformdatafactory","title":"AlamofireMultipartFormDataFactory","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/anyasyncnode\/process(_:logcontext:)","title":"func process(Input, logContext: any LoggingContextProtocol) async -> NodeResult<Output>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/anyasyncnode\/erasetoanynode()","title":"func eraseToAnyNode() -> AnyAsyncNode<Self.Input, Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(for:on:logcontext:)","title":"func nodeResultPublisher(for: Self.Input, on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.Output>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/process()","title":"func process() async -> NodeResult<Self.Output>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/process(_:)","title":"func process(Self.Input) async -> NodeResult<Self.Output>","type":"method"}],"path":"\/documentation\/nodekit\/anyasyncnode\/asyncnode-implementations","title":"AsyncNode Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher()","title":"func nodeResultPublisher() -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(for:)","title":"func nodeResultPublisher(for: Self.I) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(for:logcontext:)","title":"func nodeResultPublisher(for: Self.I, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(for:on:)","title":"func nodeResultPublisher(for: Self.I, on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(logcontext:)","title":"func nodeResultPublisher(logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(on:)","title":"func nodeResultPublisher(on: some Scheduler) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"},{"path":"\/documentation\/nodekit\/anyasyncnode\/noderesultpublisher(on:logcontext:)","title":"func nodeResultPublisher(on: some Scheduler, logContext: any LoggingContextProtocol) -> AnyPublisher<NodeResult<Self.O>, Never>","type":"method"}],"path":"\/documentation\/nodekit\/anyasyncnode\/combinecompatiblenode-implementations","title":"CombineCompatibleNode Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/anyasyncnode\/logviewobjectname","title":"var logViewObjectName: String","type":"property"},{"path":"\/documentation\/nodekit\/anyasyncnode\/objectname","title":"var objectName: String","type":"property"}],"path":"\/documentation\/nodekit\/anyasyncnode\/node-implementations","title":"Node Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/anyasyncnode","title":"AnyAsyncNode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpagerdata\/init(value:len:)","title":"init(value: Value, len: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/asyncpagerdata\/len","title":"let len: Int","type":"property"},{"path":"\/documentation\/nodekit\/asyncpagerdata\/value","title":"let value: Value","type":"property"}],"path":"\/documentation\/nodekit\/asyncpagerdata","title":"AsyncPagerData","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/encodablerequestmodel\/encoding","title":"var encoding: Encoding?","type":"property"},{"path":"\/documentation\/nodekit\/encodablerequestmodel\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/encodablerequestmodel\/raw","title":"var raw: Raw","type":"property"},{"path":"\/documentation\/nodekit\/encodablerequestmodel\/route","title":"var route: Route","type":"property"}],"path":"\/documentation\/nodekit\/encodablerequestmodel","title":"EncodableRequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/jsonencoding\/init(options:)","title":"init(options: JSONSerialization.WritingOptions)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/jsonencoding\/options","title":"let options: JSONSerialization.WritingOptions","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/jsonencoding\/encode(urlparameters:parameters:)","title":"func encode(urlParameters: TransportURLParameters, parameters: Json?) throws -> TransportURLRequest","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/jsonencoding\/default","title":"static var `default`: JSONEncoding","type":"property"},{"path":"\/documentation\/nodekit\/jsonencoding\/prettyprinted","title":"static var prettyPrinted: JSONEncoding","type":"property"}],"path":"\/documentation\/nodekit\/jsonencoding","title":"JSONEncoding","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/log\/+=(_:_:)","title":"static func += (inout Log, String)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/log\/init(_:id:delimeter:order:)","title":"init(String, id: String, delimeter: String, order: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/log\/delimeter","title":"var delimeter: String","type":"property"},{"path":"\/documentation\/nodekit\/log\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/nodekit\/log\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/nodekit\/log\/message","title":"var message: String","type":"property"},{"path":"\/documentation\/nodekit\/log\/next","title":"var next: (any Logable)?","type":"property"},{"path":"\/documentation\/nodekit\/log\/order","title":"var order: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/log\/add(message:)","title":"func add(message: String)","type":"method"}],"path":"\/documentation\/nodekit\/log","title":"Log","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequest\/init(method:url:headers:data:)","title":"init(method: Method, url: URL, headers: [String : String], data: MultipartModel<[String : Data]>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multiparturlrequest\/data","title":"let data: MultipartModel<[String : Data]>","type":"property"},{"path":"\/documentation\/nodekit\/multiparturlrequest\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/multiparturlrequest\/method","title":"let method: Method","type":"property"},{"path":"\/documentation\/nodekit\/multiparturlrequest\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/nodekit\/multiparturlrequest","title":"MultipartURLRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/nodedataresponse\/result","title":"let result: Result<Data, any Error>","type":"property"},{"path":"\/documentation\/nodekit\/nodedataresponse\/urlrequest","title":"let urlRequest: URLRequest?","type":"property"},{"path":"\/documentation\/nodekit\/nodedataresponse\/urlresponse","title":"let urlResponse: HTTPURLResponse?","type":"property"}],"path":"\/documentation\/nodekit\/nodedataresponse","title":"NodeDataResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawurlrequest\/init(datarequest:)","title":"init(dataRequest: URLRequest?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawurlrequest\/datarequest","title":"let dataRequest: URLRequest?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawurlrequest\/tourlrequest()","title":"func toURLRequest() -> URLNetworkRequest?","type":"method"}],"path":"\/documentation\/nodekit\/rawurlrequest","title":"RawURLRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodingmodel\/init(urlparameters:raw:encoding:)","title":"init(urlParameters: TransportURLParameters, raw: Json, encoding: ParametersEncoding?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestencodingmodel\/encoding","title":"let encoding: ParametersEncoding?","type":"property"},{"path":"\/documentation\/nodekit\/requestencodingmodel\/raw","title":"let raw: Json","type":"property"},{"path":"\/documentation\/nodekit\/requestencodingmodel\/urlparameters","title":"let urlParameters: TransportURLParameters","type":"property"}],"path":"\/documentation\/nodekit\/requestencodingmodel","title":"RequestEncodingModel","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/requestmodel\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/requestmodel\/raw","title":"var raw: Raw","type":"property"}],"path":"\/documentation\/nodekit\/requestmodel","title":"RequestModel","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/routablerequestmodel\/metadata","title":"var metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/routablerequestmodel\/raw","title":"var raw: Raw","type":"property"},{"path":"\/documentation\/nodekit\/routablerequestmodel\/route","title":"var route: Route","type":"property"}],"path":"\/documentation\/nodekit\/routablerequestmodel","title":"RoutableRequestModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/transporturlparameters\/init(method:url:headers:)","title":"init(method: Method, url: URL, headers: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/transporturlparameters\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/transporturlparameters\/method","title":"let method: Method","type":"property"},{"path":"\/documentation\/nodekit\/transporturlparameters\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/nodekit\/transporturlparameters","title":"TransportURLParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/transporturlrequest\/init(method:url:headers:raw:)","title":"init(method: Method, url: URL, headers: [String : String], raw: Data?)","type":"init"},{"path":"\/documentation\/nodekit\/transporturlrequest\/init(with:raw:)","title":"init(with: TransportURLParameters, raw: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/transporturlrequest\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/transporturlrequest\/method","title":"let method: Method","type":"property"},{"path":"\/documentation\/nodekit\/transporturlrequest\/raw","title":"let raw: Data?","type":"property"},{"path":"\/documentation\/nodekit\/transporturlrequest\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/nodekit\/transporturlrequest","title":"TransportURLRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlchainconfigmodel\/init(method:route:metadata:encoding:)","title":"init(method: Method, route: any URLRouteProvider, metadata: [String : String], encoding: ParametersEncoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlchainconfigmodel\/encoding","title":"let encoding: ParametersEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlchainconfigmodel\/metadata","title":"let metadata: [String : String]","type":"property"},{"path":"\/documentation\/nodekit\/urlchainconfigmodel\/method","title":"let method: Method","type":"property"},{"path":"\/documentation\/nodekit\/urlchainconfigmodel\/route","title":"let route: any URLRouteProvider","type":"property"}],"path":"\/documentation\/nodekit\/urlchainconfigmodel","title":"URLChainConfigModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urldataresponse\/init(request:response:data:)","title":"init(request: URLRequest, response: HTTPURLResponse, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urldataresponse\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/nodekit\/urldataresponse\/request","title":"let request: URLRequest","type":"property"},{"path":"\/documentation\/nodekit\/urldataresponse\/response","title":"let response: HTTPURLResponse","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urldataresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urldataresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urldataresponse","title":"URLDataResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/init(destination:arrayencoding:boolencoding:)","title":"init(destination: URLEncoding.Destination, arrayEncoding: URLEncoding.ArrayEncoding, boolEncoding: URLEncoding.BoolEncoding)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.property","title":"let arrayEncoding: URLEncoding.ArrayEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.property","title":"let boolEncoding: URLEncoding.BoolEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.property","title":"let destination: URLEncoding.Destination","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/encode(urlparameters:parameters:)","title":"func encode(urlParameters: TransportURLParameters, parameters: Json?) throws -> TransportURLRequest","type":"method"},{"path":"\/documentation\/nodekit\/urlencoding\/escape(_:)","title":"func escape(String) -> String","type":"method"},{"path":"\/documentation\/nodekit\/urlencoding\/querycomponents(fromkey:value:)","title":"func queryComponents(fromKey: String, value: Any) -> [(String, String)]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/default","title":"static var `default`: URLEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlencoding\/httpbody","title":"static var httpBody: URLEncoding","type":"property"},{"path":"\/documentation\/nodekit\/urlencoding\/querystring","title":"static var queryString: URLEncoding","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.enum\/brackets","title":"case brackets","type":"case"},{"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.enum\/nobrackets","title":"case noBrackets","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlencoding\/arrayencoding-swift.enum","title":"URLEncoding.ArrayEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.enum\/literal","title":"case literal","type":"case"},{"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.enum\/numeric","title":"case numeric","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlencoding\/boolencoding-swift.enum","title":"URLEncoding.BoolEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum\/httpbody","title":"case httpBody","type":"case"},{"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum\/methoddependent","title":"case methodDependent","type":"case"},{"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum\/querystring","title":"case queryString","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlencoding\/destination-swift.enum","title":"URLEncoding.Destination","type":"enum"}],"path":"\/documentation\/nodekit\/urlencoding","title":"URLEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnetworkrequest\/init(urlrequest:)","title":"init(urlRequest: URLRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlnetworkrequest\/urlrequest","title":"let urlRequest: URLRequest","type":"property"}],"path":"\/documentation\/nodekit\/urlnetworkrequest","title":"URLNetworkRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlprocessedresponse\/init(dataresponse:json:)","title":"init(dataResponse: URLDataResponse, json: Json)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlprocessedresponse\/data","title":"var data: Data","type":"property"},{"path":"\/documentation\/nodekit\/urlprocessedresponse\/json","title":"let json: Json","type":"property"},{"path":"\/documentation\/nodekit\/urlprocessedresponse\/request","title":"var request: URLRequest","type":"property"},{"path":"\/documentation\/nodekit\/urlprocessedresponse\/response","title":"var response: HTTPURLResponse","type":"property"}],"path":"\/documentation\/nodekit\/urlprocessedresponse","title":"URLProcessedResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/init(query:)","title":"init(query: [String : Any])","type":"init"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/init(query:boolencodingstartegy:arrayencodingstrategy:dictencodindstrategy:)","title":"init(query: [String : Any], boolEncodingStartegy: any URLQueryBoolEncodingStartegy, arrayEncodingStrategy: any URLQueryArrayKeyEncodingStartegy, dictEncodindStrategy: any URLQueryDictionaryKeyEncodingStrategy)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/arrayencodingstrategy","title":"var arrayEncodingStrategy: any URLQueryArrayKeyEncodingStartegy","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/boolencodingstartegy","title":"var boolEncodingStartegy: any URLQueryBoolEncodingStartegy","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/dictencodindstrategy","title":"var dictEncodindStrategy: any URLQueryDictionaryKeyEncodingStrategy","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryconfigmodel\/query","title":"var query: [String : Any]","type":"property"}],"path":"\/documentation\/nodekit\/urlqueryconfigmodel","title":"URLQueryConfigModel","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlquerydictionarykeyencodingdefaultstrategy\/encode(queryitemname:dictionarykey:)","title":"func encode(queryItemName: String, dictionaryKey: String) -> String","type":"method"}],"path":"\/documentation\/nodekit\/urlquerydictionarykeyencodingdefaultstrategy","title":"URLQueryDictionaryKeyEncodingDefaultStrategy","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/dtoconvertible","title":"DTOConvertible","type":"typealias"},{"path":"\/documentation\/nodekit\/json","title":"Json","type":"typealias"},{"path":"\/documentation\/nodekit\/noderesult","title":"NodeResult","type":"typealias"},{"path":"\/documentation\/nodekit\/parameters","title":"Parameters","type":"typealias"},{"path":"\/documentation\/nodekit\/rawmappable","title":"RawMappable","type":"typealias"},{"path":"\/documentation\/nodekit\/requestprocessinglayernode","title":"RequestProcessingLayerNode","type":"typealias"},{"path":"\/documentation\/nodekit\/responsepostprocessorlayernode","title":"ResponsePostprocessorLayerNode","type":"typealias"},{"path":"\/documentation\/nodekit\/responseprocessinglayernode","title":"ResponseProcessingLayerNode","type":"typealias"},{"path":"\/documentation\/nodekit\/transportlayernode","title":"TransportLayerNode","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenodeerror\/nodewasrelease","title":"case nodeWasRelease","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenodeerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/accesssafenodeerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/accesssafenodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/accesssafenodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/accesssafenodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/accesssafenodeerror","title":"AccessSafeNodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/cantconnecttohost","title":"case cantConnectToHost","type":"case"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/datanotallowed","title":"case dataNotAllowed","type":"case"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/nointernetconnection","title":"case noInternetConnection","type":"case"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/timeout","title":"case timeout","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/basetechnicalerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/basetechnicalerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/basetechnicalerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/basetechnicalerror","title":"BaseTechnicalError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/cantcasttojson","title":"case cantCastToJson","type":"case"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/cantloaddatafromcache","title":"case cantLoadDataFromCache","type":"case"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/cantserializejson","title":"case cantSerializeJson","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/baseurlcachereadererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/baseurlcachereadererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/baseurlcachereadererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/baseurlcachereadererror","title":"BaseURLCacheReaderError","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/etagconstants\/etagrequestheaderkey","title":"static var eTagRequestHeaderKey: String","type":"property"},{"path":"\/documentation\/nodekit\/etagconstants\/etagresponseheaderkey","title":"static var eTagResponseHeaderKey: String","type":"property"}],"path":"\/documentation\/nodekit\/etagconstants","title":"ETagConstants","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/errorarrayjsonmappiong\/cantfindkeyinraw(_:)","title":"case cantFindKeyInRaw(Json)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/errorarrayjsonmappiong\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/errorarrayjsonmappiong\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/errorarrayjsonmappiong\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/errorarrayjsonmappiong","title":"ErrorArrayJsonMappiong","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/logorder\/dtomappernode","title":"static let dtoMapperNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/requestcreatornode","title":"static let requestCreatorNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/requestencodingnode","title":"static let requestEncodingNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/requestsendernode","title":"static let requestSenderNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/responsedataparsernode","title":"static let responseDataParserNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/responsedatapreprocessornode","title":"static let responseDataPreprocessorNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/responsehttperrorprocessornode","title":"static let responseHttpErrorProcessorNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/responseprocessornode","title":"static let responseProcessorNode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/voidionode","title":"static let voidIONode: Double","type":"property"},{"path":"\/documentation\/nodekit\/logorder\/voidoutputnode","title":"static let voidOutputNode: Double","type":"property"}],"path":"\/documentation\/nodekit\/logorder","title":"LogOrder","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/mappingutils\/arrayjsonkey","title":"static var arrayJsonKey: String","type":"property"}],"path":"\/documentation\/nodekit\/mappingutils","title":"MappingUtils","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/method\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/nodekit\/method\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/nodekit\/method\/get","title":"case get","type":"case"},{"path":"\/documentation\/nodekit\/method\/head","title":"case head","type":"case"},{"path":"\/documentation\/nodekit\/method\/options","title":"case options","type":"case"},{"path":"\/documentation\/nodekit\/method\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/nodekit\/method\/post","title":"case post","type":"case"},{"path":"\/documentation\/nodekit\/method\/put","title":"case put","type":"case"},{"path":"\/documentation\/nodekit\/method\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/nodekit\/method\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/method\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/method\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/method\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/method\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/nodekit\/method\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/method","title":"Method","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/multipartfileprovider\/customwithurl(url:filename:mimetype:)","title":"case customWithURL(url: URL, filename: String, mimetype: String)","type":"case"},{"path":"\/documentation\/nodekit\/multipartfileprovider\/data(data:filename:mimetype:)","title":"case data(data: Data, filename: String, mimetype: String)","type":"case"},{"path":"\/documentation\/nodekit\/multipartfileprovider\/url(url:)","title":"case url(url: URL)","type":"case"}],"path":"\/documentation\/nodekit\/multipartfileprovider","title":"MultipartFileProvider","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/parametersencoding\/formurl","title":"case formURL","type":"case"},{"path":"\/documentation\/nodekit\/parametersencoding\/json","title":"case json","type":"case"},{"path":"\/documentation\/nodekit\/parametersencoding\/urlquery","title":"case urlQuery","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/parametersencoding\/raw","title":"var raw: any ParameterEncoding","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/parametersencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/parametersencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/parametersencoding","title":"ParametersEncoding","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawmappablecodableerror\/cantmapobjecttoraw","title":"case cantMapObjectToRaw","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawmappablecodableerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/rawmappablecodableerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/rawmappablecodableerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/rawmappablecodableerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/rawmappablecodableerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/rawmappablecodableerror","title":"RawMappableCodableError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernodeerror\/cantcastdesirializeddatatojson(_:)","title":"case cantCastDesirializedDataToJson(String)","type":"case"},{"path":"\/documentation\/nodekit\/responsedataparsernodeerror\/cantdeserializejson(_:)","title":"case cantDeserializeJson(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsedataparsernodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/responsedataparsernodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/responsedataparsernodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responsedataparsernodeerror","title":"ResponseDataParserNodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/badrequest(_:)","title":"case badRequest(Data)","type":"case"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/forbidden(_:)","title":"case forbidden(Data)","type":"case"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/internalservererror(_:)","title":"case internalServerError(Data)","type":"case"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/unauthorized(_:)","title":"case unauthorized(Data)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responsehttperrorprocessornodeerror","title":"ResponseHttpErrorProcessorNodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornodeerror\/rawresponsenothavemetadata","title":"case rawResponseNotHaveMetaData","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornodeerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/responseprocessornodeerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/responseprocessornodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/responseprocessornodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/responseprocessornodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/responseprocessornodeerror","title":"ResponseProcessorNodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy\/brackets","title":"case brackets","type":"case"},{"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy\/nobrackets","title":"case noBrackets","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy\/encode(value:)","title":"func encode(value: String) -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlqueryarraykeyencodingbracketsstartegy","title":"URLQueryArrayKeyEncodingBracketsStartegy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy\/asbool","title":"case asBool","type":"case"},{"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy\/asint","title":"case asInt","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy\/encode(value:)","title":"func encode(value: Bool) -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlqueryboolencodingdefaultstartegy","title":"URLQueryBoolEncodingDefaultStartegy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/cantcreateurlcomponentsfromurlstring","title":"case cantCreateURLComponentsFromURLString","type":"case"},{"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/cantcreateurlfromurlcomponents","title":"case cantCreateURLFromURLComponents","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlqueryinjectornodeerror","title":"URLQueryInjectorNodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrouteerror\/cantbuildurl","title":"case cantBuildURL","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrouteerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/nodekit\/urlrouteerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/urlrouteerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/nodekit\/urlrouteerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/nodekit\/urlrouteerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/urlrouteerror","title":"URLRouteError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/foundation\/characterset\/afurlqueryallowed","title":"static let afURLQueryAllowed: CharacterSet","type":"property"}],"path":"\/documentation\/nodekit\/foundation\/characterset","title":"CharacterSet","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/foundation\/url\/withorderedquery()","title":"func withOrderedQuery() -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/foundation\/url\/url()","title":"func url() throws -> URL","type":"method"}],"path":"\/documentation\/nodekit\/foundation\/url\/urlrouteprovider-implementations","title":"URLRouteProvider Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/foundation\/url","title":"URL","type":"extension"}],"path":"\/documentation\/nodekit\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/array\/dto","title":"Array.DTO","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/array\/from(dto:)","title":"static func from(dto: Array<Element>.DTO) throws -> Array<Element>","type":"method"}],"path":"\/documentation\/nodekit\/swift\/array\/dtodecodable-implementations","title":"DTODecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/array\/todto()","title":"func toDTO() throws -> Array<Element.DTO>","type":"method"}],"path":"\/documentation\/nodekit\/swift\/array\/dtoencodable-implementations","title":"DTOEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/array\/from(raw:)","title":"static func from(raw: Json) throws -> Array<Element>","type":"method"}],"path":"\/documentation\/nodekit\/swift\/array\/rawdecodable-implementations","title":"RawDecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/array\/toraw()","title":"func toRaw() throws -> Json","type":"method"}],"path":"\/documentation\/nodekit\/swift\/array\/rawencodable-implementations","title":"RawEncodable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/from(dto:)","title":"static func from(dto: Json) throws -> [String : Any]","type":"method"}],"path":"\/documentation\/nodekit\/swift\/dictionary\/dtodecodable-implementations","title":"DTODecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/todto()","title":"func toDTO() throws -> Json","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/dto","title":"Dictionary.DTO","type":"typealias"}],"path":"\/documentation\/nodekit\/swift\/dictionary\/dtoencodable-implementations","title":"DTOEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/from(raw:)-311kg","title":"static func from(raw: Json) throws -> Json","type":"method"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/from(raw:)-g0s3","title":"static func from(raw: Self.Raw) throws -> Self","type":"method"}],"path":"\/documentation\/nodekit\/swift\/dictionary\/rawdecodable-implementations","title":"RawDecodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/toraw()-2j7bl","title":"func toRaw() throws -> Self.Raw","type":"method"},{"path":"\/documentation\/nodekit\/swift\/dictionary\/toraw()-3zzm7","title":"func toRaw() throws -> Json","type":"method"}],"path":"\/documentation\/nodekit\/swift\/dictionary\/rawencodable-implementations","title":"RawEncodable Implementations","type":"symbol"}],"path":"\/documentation\/nodekit\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/string\/linetabdeilimeter","title":"static var lineTabDeilimeter: String","type":"property"}],"path":"\/documentation\/nodekit\/swift\/string","title":"String","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/optional\/+(_:_:)","title":"static func + (URL?, String) throws -> URL","type":"op"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/optional\/from(dto:)","title":"static func from(dto: Wrapped.DTO?) throws -> Wrapped?","type":"method"},{"path":"\/documentation\/nodekit\/swift\/optional\/from(raw:)","title":"static func from(raw: Wrapped.Raw?) throws -> Wrapped?","type":"method"}],"path":"\/documentation\/nodekit\/swift\/optional","title":"Optional","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/result\/error","title":"var error: (any Error)?","type":"property"},{"path":"\/documentation\/nodekit\/swift\/result\/value","title":"var value: Success?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/result\/asyncflatmap(_:)","title":"func asyncFlatMap<NewSuccess>((Success) async -> NodeResult<NewSuccess>) async -> NodeResult<NewSuccess>","type":"method"},{"path":"\/documentation\/nodekit\/swift\/result\/asyncflatmaperror(_:)","title":"func asyncFlatMapError((Failure) async -> NodeResult<Success>) async -> NodeResult<Success>","type":"method"},{"path":"\/documentation\/nodekit\/swift\/result\/map(_:)","title":"func map<NewSuccess>((Success) throws -> NewSuccess) rethrows -> NodeResult<NewSuccess>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/nodekit\/swift\/result\/withcheckedcancellation(_:)","title":"static func withCheckedCancellation<T>(() async -> NodeResult<T>) async -> NodeResult<T>","type":"method"},{"path":"\/documentation\/nodekit\/swift\/result\/withmappedexceptions(_:_:)","title":"static func withMappedExceptions<T>((any Error)?, () async throws -> NodeResult<T>) async -> NodeResult<T>","type":"method"}],"path":"\/documentation\/nodekit\/swift\/result","title":"Result","type":"extension"}],"path":"\/documentation\/nodekit\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/nodekit","title":"NodeKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}